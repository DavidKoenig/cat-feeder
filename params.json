{
  "name": "Cat-feeder",
  "tagline": "A RaspberryPi Cat Feeder",
  "body": "Cat Feeder\r\n=========\r\nSoftware for a cat feeder built with RaspberryPi. \r\n\r\n# How to Install\r\n## Dependencies\r\nFirst install these packages to your raspbian:\r\n- apache2\r\n- php5, php5-pgsql, curl, php5-cli\r\n- postgresql\r\n- composer\r\n\r\n## Clone Repository\r\nClone this repository to `/var/www/html/`\r\n\r\n## Create database\r\nCreate a database, e.g. *catfeeder* (you will be later asked about the name and credentials and when executing `composer install`)\r\n\r\n## Set rights\r\n##### bash script\r\nBecause of the usage of the [Raspberry Pi Remote library](https://github.com/xkonni/raspberry-remote.git) the python scripts in this project need sudo rights. \r\nBut doen't be afraid, it's all wrapped in a single bash script on which *www-data* has access. \r\nBut we need to make it accessible for *www-data*.\r\n\r\nTo do so add the following at the end of `/etc/sudoers`:\r\n \r\n    www-data ALL=NOPASSWD:/var/www/html/cat-feeder/app/Resources/pi/catfeeder-sudo-script.sh\r\n\r\nFurthermore if something doesn't work with the deploy script you have to add the user *pi* to *www-data* with `sudo usermod -a -G www-data pi`' \r\n\r\n## Deploy\r\nYou have to do the following steps to deploy the:\r\n\r\n- create a file named `cat-feeder.conf` in `/etc/apache2/conf-available` and write the following in it:\r\n    ```\r\n    Alias /cat-feeder \"/var/www/html/cat-feeder/web/\"\r\n    <Directory \"var/www/html/cat-feeder/web\">\r\n        Options +FollowSymLinks\r\n        AllowOverride All\r\n    </Directory>\r\n    ```\r\n- enable the config with `sudo a2ensite cat-feeder.conf`\r\n- activate the apache url rewrite module with `sudo a2enmod rewrite`\r\n- finally launch the deploy script in with `bash /var/www/html/cat-feeder/delpoy.sh prod`\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}